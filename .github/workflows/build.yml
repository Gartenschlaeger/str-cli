name: Build

on: push

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.20.2
                  cache: true

            - name: Run tests
              run: go test ./...

            - name: Get Version
              run: |
                  export STR_VERSION=$(grep -o -E '([0-9]+\.){2}[0-9]+' main.go)
                  echo "STR_VERSION=$STR_VERSION" >> $GITHUB_ENV
                  echo "VERSION: $STR_VERSION"

            - name: Build artifacts
              run: |
                  echo "Building for macOS amd64"
                  GOOS=darwin GOARCH=amd64 go build -o dist/darwin-amd64/str
                  zip -j dist/darwin-amd64-${STR_VERSION}.zip dist/darwin-amd64/**

                  echo "Building for macOS arm64"
                  GOOS=darwin GOARCH=arm64 go build -o dist/darwin-arm64/str
                  zip -j dist/darwin-arm64-${STR_VERSION}.zip dist/darwin-arm64/**

                  echo "Building for Linux"
                  GOOS=linux GOARCH=amd64 go build -o dist/linux-amd64/str
                  zip -j dist/linux-amd64-${STR_VERSION}.zip dist/linux-amd64/**

                  echo "Building for Windows"
                  GOOS=windows GOARCH=amd64 go build -o dist/windows-amd64/str.exe
                  zip -j dist/windows-amd64-${STR_VERSION}.zip dist/windows-amd64/**

            - name: Create release
              uses: actions/create-release@v1
              id: create_release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  release_name: Release ${{ env.STR_VERSION }}
                  tag_name: ${{ env.STR_VERSION }}
                  draft: false
                  prerelease: false
                  body: |
                      Test
